{"ast":null,"code":"var _jsxFileName = \"/home/oleg/my-app/src/App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nconst apiKey = \"55a346ef64175467a93be9bfb320e5fe\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      county: undefined,\n      sunrise: undefined,\n      sunset: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      let city = e.target.elements.city.value;\n\n      if (city) {\n        let apiUrl = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n        const data = await apiUrl.json();\n        let sunset = data.sys.sunset;\n        let date = new Date();\n        date.setTime(sunset);\n        let sunsetDate = data.sys.sunset / sunset * 1000;\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          county: data.sys.country,\n          sunrise: data.sys.sunrise,\n          sunset: sunsetDate,\n          error: \"\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      gettingWeather: this.gettingWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      county: this.state.county,\n      sunrise: this.state.sunrise,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/oleg/my-app/src/App.js"],"names":["React","Info","Form","Weather","apiKey","App","Component","state","temp","undefined","city","county","sunrise","sunset","gettingWeather","e","preventDefault","target","elements","value","apiUrl","fetch","data","json","sys","date","Date","setTime","sunsetDate","setState","main","name","country","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,MAAM,GAAG,kCAAf;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,IAAI,EAAEC,SADA;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,MAAM,EAAEF,SAHF;AAING,MAAAA,OAAO,EAAEH,SAJH;AAKNI,MAAAA,MAAM,EAAEJ;AALF,KADwB;;AAAA,SAUhCK,cAVgC,GAUf,MAAOC,CAAP,IAAa;AAC5BA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIN,IAAI,GAAGK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,IAAlB,CAAuBS,KAAlC;;AACA,UAAIT,IAAJ,EAAU;AACV,YAAIU,MAAM,GAAG,MACbC,KAAK,CAAG,qDAAoDX,IAAK,UAASN,MAAO,eAA5E,CADL;AAEA,cAAMkB,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAnB;AACA,YAAIV,MAAM,GAAGS,IAAI,CAACE,GAAL,CAASX,MAAtB;AACA,YAAIY,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,QAAAA,IAAI,CAACE,OAAL,CAAad,MAAb;AACA,YAAIe,UAAU,GAAIN,IAAI,CAACE,GAAL,CAASX,MAAT,GAAgBA,MAAhB,GAAyB,IAA3C;AAIA,aAAKgB,QAAL,CAAe;AACXrB,UAAAA,IAAI,EAAEc,IAAI,CAACQ,IAAL,CAAUtB,IADL;AAEXE,UAAAA,IAAI,EAAEY,IAAI,CAACS,IAFA;AAGXpB,UAAAA,MAAM,EAAEW,IAAI,CAACE,GAAL,CAASQ,OAHN;AAIXpB,UAAAA,OAAO,EAAEU,IAAI,CAACE,GAAL,CAASZ,OAJP;AAKXC,UAAAA,MAAM,EAAEe,UALG;AAMXK,UAAAA,KAAK,EAAE;AANI,SAAf;AAQD;AACF,KAjCiC;AAAA;;AAkChCC,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK,oBAAC,IAAD;AAAM,MAAA,cAAc,EAAI,KAAKpB,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK,oBAAC,OAAD;AACH,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC,IADd;AAEH,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFd;AAGH,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MAHhB;AAIH,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OAJjB;AAKH,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MALhB;AAMH,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAW0B,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CAHA,CADF;AAcD;;AAjD+B;;AAoDlC,eAAe5B,GAAf","sourcesContent":["import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\nconst apiKey = \"55a346ef64175467a93be9bfb320e5fe\";\n\nclass App extends React.Component {\n  state = {\n    temp: undefined,\n    city: undefined,\n    county: undefined,\n    sunrise: undefined,\n    sunset: undefined\n  }\n\n\n  gettingWeather = async (e) => {\n    e.preventDefault();\n    let city = e.target.elements.city.value;\n    if (city) {\n    let apiUrl = await \n    fetch (`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n    const data = await apiUrl.json();\n    let sunset = data.sys.sunset;\n    let date = new Date();\n    date.setTime(sunset);\n    let sunsetDate =  data.sys.sunset/sunset * 1000;\n\n\n\n    this.setState ({\n        temp: data.main.temp,\n        city: data.name,\n        county: data.sys.country,\n        sunrise: data.sys.sunrise,\n        sunset: sunsetDate,\n        error: \"\"\n    });\n  }\n}\n  render () {\n    return (\n      <div>\n      <div><Info/></div>\n      <div><Form gettingWeather = {this.gettingWeather}/></div>\n      <div><Weather\n        temp={this.state.temp}\n        city={this.state.city}\n        county={this.state.county}\n        sunrise={this.state.sunrise}\n        sunset={this.state.sunset}\n        error={this.state.error}\n      /></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}