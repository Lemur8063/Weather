{"ast":null,"code":"var _jsxFileName = \"/home/oleg/my-app/src/App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nconst apiKey = \"55a346ef64175467a93be9bfb320e5fe\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      county: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      let city = e.target.elements.city.value;\n\n      if (city) {\n        let apiUrl = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n        const data = await apiUrl.json();\n        let sunsetDate = new Date(data.sys.sunset * 1000);\n        sunsetDate = sunsetDate.toLocaleTimeString();\n        let sunriseDate = new Date(data.sys.sunrise * 1000);\n        sunriseDate = sunriseDate.toLocaleTimeString();\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          county: data.sys.country,\n          sunrise: sunriseDate,\n          sunset: sunsetDate,\n          error: undefined\n        });\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          county: undefined,\n          sunrise: undefined,\n          sunset: undefined,\n          error: \"Please writting your city\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weatherContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"weatherImg\",\n      href: \"weather.png\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      gettingWeather: this.gettingWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      county: this.state.county,\n      sunrise: this.state.sunrise,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/oleg/my-app/src/App.js"],"names":["React","Info","Form","Weather","apiKey","App","Component","state","temp","undefined","city","county","sunrise","sunset","error","gettingWeather","e","preventDefault","target","elements","value","apiUrl","fetch","data","json","sunsetDate","Date","sys","toLocaleTimeString","sunriseDate","setState","main","name","country","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\nconst apiKey = \"55a346ef64175467a93be9bfb320e5fe\";\n\nclass App extends React.Component {\n  state = {\n    temp: undefined,\n    city: undefined,\n    county: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    error: undefined\n  }\n\n\n  gettingWeather = async (e) => {\n    e.preventDefault();\n    let city = e.target.elements.city.value;\n    if (city) {\n    let apiUrl = await \n    fetch (`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n    const data = await apiUrl.json();\n    let sunsetDate = new Date(data.sys.sunset * 1000);\n        sunsetDate =  sunsetDate.toLocaleTimeString();\n    let sunriseDate = new Date(data.sys.sunrise * 1000);\n        sunriseDate =  sunriseDate.toLocaleTimeString();\n\n\n\n    this.setState ({\n        temp: data.main.temp,\n        city: data.name,\n        county: data.sys.country,\n        sunrise: sunriseDate,\n        sunset: sunsetDate,\n        error: undefined\n    });\n  } else {\n    this.setState({\n      temp: undefined,\n      city: undefined,\n      county: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: \"Please writting your city\"\n    });\n  }\n}\n  render () {\n    return (\n      <div className=\"weatherContainer\">\n        <img className=\"weatherImg\" href=\"weather.png\" alt=\"\"></img>\n      <div><Info/></div>\n      <div><Form gettingWeather = {this.gettingWeather}/></div>\n      <div><Weather\n        temp={this.state.temp}\n        city={this.state.city}\n        county={this.state.county}\n        sunrise={this.state.sunrise}\n        sunset={this.state.sunset}\n        error={this.state.error}\n      /></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}